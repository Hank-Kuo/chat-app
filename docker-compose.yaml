version: "3.8"

services: 
    redis:
      image: redis:6.0.9-alpine
      container_name: chat-app-redis
      ports:
        - "6379:6379"
      restart: always
      networks:
        - web_api
    zookeeper:
      container_name: chat-app-zookeeper
      image: wurstmeister/zookeeper
      ports:
        - 2181:2181
      networks:
        - web_api
    
    kafka:
      container_name: chat-app-kafka
      image: wurstmeister/kafka
      ports:
        - 9092:9092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,OUTSIDE://localhost:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,OUTSIDE://0.0.0.0:9092
        KAFKA_CREATE_TOPICS: "message_topic:1:1,reply_topic:1:1" # 1 paritition, 1 replicas
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      depends_on:
        - zookeeper
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock     
      networks:
        - web_api
    
    kafka-ui:
      image: provectuslabs/kafka-ui
      container_name: kafka-ui
      ports:
        - "8086:8080"
      restart: always
      depends_on:
        - kafka
        - zookeeper
      environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:19092
      networks: 
        - web_api
    
    postgesql:
      container_name: chat-app-postgesql
      image: postgres:12-alpine
      ports:
        - "5432:5432"
      restart: always
      env_file:
        - ".env"
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DATABASE}
      volumes:
        - ./pgdata:/var/lib/postgresql/data
      networks:
        - web_api
    
    cassandra: 
      container_name: chat-app-cassandra
      image: "cassandra"
      ports:
        - '9042:9042'
      expose: 
        - 9042
      volumes:
        - ./cassandra-node-0/commitlog:/var/lib/cassandra/commitlog
        - ./cassandra-node-0/hints:/var/lib/cassandra/hints
        - ./cassandra-node-0/data:/var/lib/cassandra/data
        - ./cassandra-node-0/saved_caches:/var/lib/cassandra/saved_caches
        - ./cassandra-node-0/logs:/var/log/cassandra

    
    prometheus:
      container_name: chat-app-prometheus
      image: prom/prometheus
      restart: always
      extra_hosts:
        - "host.docker.internal:host-gateway"
      volumes:
        - ./config/monitoring/prometheus.local.yml:/etc/prometheus/prometheus.yml:Z
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--storage.tsdb.retention=20d'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
      ports:
        - '9090:9090'
      networks:
        - web_api
    
    node_exporter:
      container_name: chat-app-node_exporter
      restart: always
      image: prom/node-exporter
      ports:
        - '9101:9100'
      networks:
        - web_api
    
    grafana:
      container_name: chat-app-grafana
      restart: always
      image: grafana/grafana
      ports:
        - '3001:3000'
      networks:
        - web_api
    
    jaeger:
      container_name: chat-app-jaeger
      restart: always
      image: jaegertracing/all-in-one:1.21
      environment:
        - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      ports:
        - 5775:5775/udp
        - 6831:6831/udp
        - 6832:6832/udp
        - 5778:5778
        - 16686:16686
        - 14268:14268
        - 14250:14250
        - 9411:9411
      networks:
        - web_api

networks:
  web_api:
    driver: bridge